<UserControl x:Class="FACE_CaptureComparisonManagement.Views.ChannelTreeView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:FACE_CaptureComparisonManagement.Views"
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             mc:Ignorable="d" >

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/FACE_CaptureComparisonManagement;component/StyleResources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <ImageBrush x:Key="channelPrecinct" ImageSource="../Images/channelPrecinct.png" Stretch="UniformToFill"/>

        
            <!--HeaderedContentControl-->
            <Style x:Key="textBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="Foreground" Value="#c3d2ef" />
                <Setter Property="Background" Value="Black" />
            </Style>
            <SolidColorBrush Color="#FFCACACA" x:Key="Pad_BorderBrush" />
            <SolidColorBrush Color="#FFFFFF" x:Key="Pad_Background" />
            <LinearGradientBrush x:Key="Pad_Header_Background" EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFD8D8D8" Offset="0" />
                <GradientStop Color="#FFAEAEAE" Offset="1" />
            </LinearGradientBrush>
            <Style x:Key="DefaultHeaderedContentControlStyle" TargetType="HeaderedContentControl">
                <Setter Property="BorderThickness" Value="1 0 1 1" />
                <Setter Property="BorderBrush" Value="{StaticResource Pad_BorderBrush}" />
                <Setter Property="Background" Value="{StaticResource Pad_Background}" />

                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="HeaderedContentControl">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="4 4 0 0" Padding="10 7"
								Background="{StaticResource Pad_Header_Background}">
                                    <ContentPresenter Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}" />
                                </Border>
                                <Border Grid.Row="1" CornerRadius="0 0 4 4"
								BorderThickness="{TemplateBinding BorderThickness}"
								BorderBrush="{TemplateBinding BorderBrush}"
								Background="{TemplateBinding Background}">
                                    <ContentPresenter Margin="{TemplateBinding Padding}"
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--RadDropDownButton-->
            <Style x:Key="RadDropDownButtonStyle" TargetType="telerik:RadDropDownButton">
                <Setter Property="SnapsToDevicePixels" Value="True"/>
                <Setter Property="IsOpen" Value="False"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Foreground" Value="Wheat"/>
                <Setter Property="FontWeight" Value="Normal"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Top"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="telerik:RadDropDownButton">
                            <Grid>
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <Grid Grid.Column="1" Background="Transparent">
                                        <Path x:Name="DropDownIndicator" Fill="White" HorizontalAlignment="Right" IsHitTestVisible="False" Margin="5,4,5,0" Visibility="{Binding DropDownIndicatorVisibility}" VerticalAlignment="Top"
                                              RenderTransformOrigin="0.5,0.5" Data="M0.5,0.5 L6.5000002,0.5 6.5000002,0.66296414 6.6629643,0.66296414 6.6629643,6.6629641 5.6629643,6.6629641 5.6629643,1.5 0.5,1.5 z">
                                            <Path.RenderTransform>
                                                <TransformGroup>
                                                    <ScaleTransform />
                                                    <SkewTransform />
                                                    <RotateTransform Angle="135" />
                                                    <TranslateTransform />
                                                </TransformGroup>
                                            </Path.RenderTransform>
                                        </Path>
                                    </Grid>
                                </Grid>
                                <Popup x:Name="DropDownPopup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsOpen,RelativeSource={RelativeSource TemplatedParent}}" Placement="Bottom" StaysOpen="False">
                                    <Grid>
                                        <Border Background="#66000000" BorderThickness="3" BorderBrush="#FF494E59">
                                            <Border BorderBrush="#B2AFAFAF" BorderThickness="1,1,1,1" Background="#F43A3D45">
                                                <ContentPresenter x:Name="DropDownPopupContent" ContentTemplate="{TemplateBinding DropDownContentTemplate}" Content="{TemplateBinding DropDownContent}"
                                                                  DataContext="{Binding DataContext,RelativeSource={RelativeSource TemplatedParent}}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
                                            </Border>
                                        </Border>
                                    </Grid>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="White" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsOpen" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard FillBehavior="Stop">
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.3" To="#FFA8D300" Storyboard.TargetName="DropDownIndicator" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--TreeView-->
            <Style TargetType="ToggleButton" x:Key="ExpanderStyle">
                <Setter Property="IsEnabled" Value="True" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <MultiTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.2" To="#FF1BBBFA" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.EnterActions>
                                    <MultiTrigger.ExitActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="ExpandedVisual" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" />
                                                <ColorAnimation Duration="0:0:0.2" To="#FFE6E6E6" Storyboard.TargetName="CollapsedVisual" Storyboard.TargetProperty="(Stroke).(SolidColorBrush.Color)"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </MultiTrigger.ExitActions>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="ExpandedStates" Storyboard.TargetProperty="Opacity" To="0" />
                                                <DoubleAnimation Duration="0:0:0.2" Storyboard.TargetName="CollapsedStates" Storyboard.TargetProperty="Opacity" To="1" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </Trigger.EnterActions>
                                </Trigger>

                            </ControlTemplate.Triggers>

                            <Grid>
                                <Grid x:Name="CollapsedStates" >
                                    <Path x:Name="CollapsedVisual" Height="10" Width="5" 
										Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5" />
                                </Grid>
                                <Grid x:Name="ExpandedStates" Opacity="0">
                                    <Path x:Name="ExpandedVisual" Height="10" Width="5" IsHitTestVisible="False"
										Fill="#FFE6E6E6" Stretch="Fill" Stroke="#FFE6E6E6" 
										Data="M1098.3334,527.90997 L1098.3334,536.30115 L1102.2695,532.36487 z"
										RenderTransformOrigin="0.5,0.5">
                                        <Path.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                                <SkewTransform AngleX="0" AngleY="0" />
                                                <RotateTransform Angle="45" />
                                                <TranslateTransform X="0" Y="0" />
                                            </TransformGroup>
                                        </Path.RenderTransform>
                                    </Path>
                                </Grid>
                            </Grid>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
            <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border Width="12" Height="14">
                                <Path x:Name="ExpandPath" HorizontalAlignment="Right" VerticalAlignment="Center"
                            Fill="Transparent" Stroke="#FFE6E6E6" Data="M 2 2 L 7 7 L 2 12 Z"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                </MultiTrigger>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Data" TargetName="ExpandPath" Value="M 1 10 L 7 3 L 7 10 Z"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#FFE6E6E6"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsChecked" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Stroke" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                    <Setter Property="Fill" TargetName="ExpandPath" Value="#FF1BBBFA"/>
                                </MultiTrigger>

                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
          
            <ControlTemplate TargetType="telerik:RadTreeViewItem" x:Key="TreeViewItemDefaultTemplate">
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSelected" Value="True">

                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="SelectionVisual" Storyboard.TargetProperty="Visibility" Duration="0">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="IsFocused" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames
										Storyboard.TargetName="FocusVisual" Storyboard.TargetProperty="Visibility" Duration="0"> 
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                    </Trigger>
                    <Trigger Property="IsExpanded" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Visible</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" From="0.1" To="1.0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Opacity" From="1" To="0.1" Duration="0:0:0.2" />
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility" Duration="0" BeginTime="0:0:0.2">
                                        <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                                <Visibility>Collapsed</Visibility>
                                            </DiscreteObjectKeyFrame.Value>
                                        </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
                <Grid Margin="2" Height="Auto" Background="Transparent" VerticalAlignment="Center">

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" x:Name="HeaderRow" Height="Auto" VerticalAlignment="Center" Background="Transparent">
                        <!--<Rectangle RadiusX="3" RadiusY="3" Stroke="#FF709FDA" StrokeLineJoin="Bevel"
							StrokeThickness="1">
                            <Rectangle.Fill>
                                <LinearGradientBrush EndPoint="0.5,0.034" StartPoint="0.5,0.966">
                                    <GradientStop Color="#FFE4E5F0" Offset="0" />
                                    <GradientStop Color="#FFFFFFFF" Offset="1" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>-->
                        <!-- Selection -->
                        <Border x:Name="SelectionVisual" Visibility="Collapsed" BorderBrush="#FFA8C9D8" BorderThickness="1,1,1,1" CornerRadius="3,3,3,3">
                            <Border.Background>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="#FF00CCFF" Offset="0" />
                                    <GradientStop Color="#FF9BB1FF" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                            <Border CornerRadius="2,2,2,2" BorderBrush="#FFFFFFFF" BorderThickness="2">
                                <Border.Background>
                                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                        <GradientStop Color="#E5FFFFFF" Offset="0" />
                                        <GradientStop Color="#33FFFFFF" Offset="1" />
                                        <GradientStop Color="#4DFFFFFF" Offset="0.5" />
                                        <GradientStop Color="#00FFFFFF" Offset="0.511" />
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                        </Border>
                     
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <!--<ToggleButton x:Name="Expander" Margin="0,0,0,5"></ToggleButton>-->
                            <ToggleButton x:Name="Expander" Height="10" Width="5" Margin="{TemplateBinding Margin}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" IsTabStop="False"/>
                            <!--<ContentPresenter Name="Header" 
									Content="{TemplateBinding Header}"
									ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            Margin="{TemplateBinding Margin}" 
									HorizontalAlignment="Center" VerticalAlignment="Center" />-->

                            <ContentPresenter x:Name="Content" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" Margin="{TemplateBinding Padding}"
                                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" DataContext="{TemplateBinding DataContext}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </StackPanel>

                        <!--<Button Foreground="{TemplateBinding Foreground}" x:Name="FocusVisual" Content="123456" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="5,0,3,0"/>-->
                        <Rectangle x:Name="FocusVisual" RadiusX="3" RadiusY="3"
							Visibility="Collapsed" Stroke="Black" StrokeThickness="0.75"
							StrokeDashArray="1,2" IsHitTestVisible="False" />
                    </Grid>
                    <ItemsPresenter Grid.Row="1" x:Name="ItemsHost" Visibility="Collapsed" />
                </Grid>

            </ControlTemplate>

            <Style TargetType="telerik:RadTreeViewItem" x:Key="TreeViewItemStyle">
                <Setter Property="Template" Value="{StaticResource TreeViewItemDefaultTemplate}" />
                <Setter Property="IsExpanded" Value="True" />
                <Setter Property="ItemsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel HorizontalAlignment="Center" Margin="4,6" Orientation="Vertical" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <local:LeagueCollection x:Key="MyCollection" />

            <DataTemplate x:Key="Team">
                <StackPanel Orientation="Horizontal">
                    <Image Width="10" x:Name="MeetingGroup_Image"  Source="../Images/channelLeftCameraNotlight.png"></Image>
                    <TextBlock Margin="10,0,0,0" Foreground="#FFE6E6E6" FontSize="12" FontWeight="Bold" VerticalAlignment="Center" Text="{Binding Name}" />
                </StackPanel>
            </DataTemplate>

            <HierarchicalDataTemplate x:Key="Division" ItemTemplate="{StaticResource Team}" ItemsSource="{Binding Teams}">
                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12"/>
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="League" ItemTemplate="{StaticResource Division}" ItemsSource="{Binding Divisions}">
                <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" />
            </HierarchicalDataTemplate>

            <HierarchicalDataTemplate x:Key="Leagued" ItemTemplate="{StaticResource League}" ItemsSource="{Binding Leagues}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12"/>
                    <TextBox Text="{Binding Name}" FontWeight="Bold" Foreground="#FFE6E6E6" FontSize="12" Visibility="Collapsed"/>
                    <telerik:RadDropDownButton BorderThickness="0" Style="{StaticResource RadDropDownButtonStyle}" Margin="100,0,0,0" VerticalAlignment="Stretch" DropDownPlacement="Bottom" RenderTransformOrigin="0.5,0.5">
                        <!--<telerik:RadDropDownButton.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock  Text="翻译"/>
                            </StackPanel>
                        </telerik:RadDropDownButton.Content>-->

                        <telerik:RadDropDownButton.DropDownContent>
                            <telerik:RadContextMenu Width="100" Margin="0 0 -3 -3" BorderThickness="0" FontWeight="Bold">
                                <telerik:RadMenuItem Header="新增"/>

                                <telerik:RadMenuItem Header="修改" />

                                <telerik:RadMenuItem Header="删除"/>

                            </telerik:RadContextMenu>
                        </telerik:RadDropDownButton.DropDownContent>
                    </telerik:RadDropDownButton>
                </StackPanel>
            </HierarchicalDataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>

        <!--<HeaderedContentControl Header="Music Catalog" Background="#FF252526"
			Style="{StaticResource DefaultHeaderedContentControlStyle}" Width="240" Height="350"
			HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">-->
        <telerik:RadTreeView  Grid.Column="0" x:Name="ZoneChannelTreeView" ItemTemplate="{StaticResource Leagued}" ItemsSource="{Binding Source={StaticResource MyCollection}}" 
                                  ExpanderStyle="{StaticResource ExpanderStyle}" ScrollViewer.HorizontalScrollBarVisibility="Auto" AutoScrollToSelectedItem="True" SelectedValuePath="Name" 
                                  BorderBrush="Black" BorderThickness="1" ForceCursor="True" SelectionMode="Extended"  IsLineEnabled="False" IsRootLinesEnabled="False" IsExpandOnSingleClickEnabled="True" 
				                  IsOptionElementsEnabled="False" IsEditable="True" IsDragDropEnabled="True" ItemDoubleClick="item_Click" Background="{StaticResource channelPrecinct}">

            <telerik:RadTreeView.ItemContainerStyle>
                <Style TargetType="telerik:RadTreeViewItem">
                    <Setter Property="IsExpanded" Value="True"/>
                    <Style.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </telerik:RadTreeView.ItemContainerStyle>
        </telerik:RadTreeView>
        <!--</HeaderedContentControl>-->

        
        <!--<Grid Grid.Row="2" Background="{StaticResource channelPrecinct}">
            <TreeView   MouseDoubleClick="{Binding .}"  TreeViewItem.Expanded="{Binding .}"  ItemsSource="{Binding ChannelTree}"  BorderThickness="0" Background="Transparent"  x:Name="ChannelTreeView">
                <TreeView.ItemTemplate>
                    <HierarchicalDataTemplate ItemsSource="{Binding Child}">
                        <Grid HorizontalAlignment="Left" Height="45">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <TextBlock Margin="5,0,0,0" Grid.Column="1" Foreground="White"  FontSize="20"  x:Name="texHeader"   VerticalAlignment="Center" Text="{Binding Header}"/>
                            <Image Width="20" x:Name="imgAdd" Grid.Column="0" Visibility="Collapsed" Source="../Images/channelLeftVideoNotLightState.png">
                            </Image>
                        </Grid>
                        <HierarchicalDataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsChannel}" Value="true">
                                <Setter Property="Visibility" TargetName="imgAdd" Value="Visible"></Setter>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsOpened}" Value="true">
                                <Setter Property="Source" TargetName="imgAdd" Value="../Images/channelLeftVideoLightState.png"></Setter>
                            </DataTrigger>
                        </HierarchicalDataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.ItemTemplate>
            </TreeView>
        </Grid>-->
        <!--<ListBox ItemsSource="{Binding ChannelListCV}" SelectedItem="{Binding ChannelCurrentItem}" ScrollViewer.VerticalScrollBarVisibility="Hidden" Background="{StaticResource channelPrecinct}" x:Name="ChannelManageListBox" ItemTemplate="{StaticResource ChannelManageDataTemplate}" BorderThickness="0">
            <ListBox.Resources>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Tag" Value="0"></Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Grid>
                                    <Border Padding="0,0,0,0" x:Name="Bd"  Background="{TemplateBinding Background}"  SnapsToDevicePixels="true">
                                        <ContentPresenter  x:Name="Content" RenderTransformOrigin="0.5,0.5" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Top">
                                            <ContentPresenter.RenderTransform>
                                                <ScaleTransform ScaleX="1" ScaleY="1"></ScaleTransform>
                                            </ContentPresenter.RenderTransform>
                                        </ContentPresenter>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="Bd" Property="Background" Value="{StaticResource selectedbackground}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.Resources>
        </ListBox>-->
    </Grid>
</UserControl>
