<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FACE_HistorySearchManagement"
                    xmlns:Converter="clr-namespace:SING.Infrastructure.Converter;assembly=SING.Infrastructure" 
                    xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Input">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/SING.Infrastructure;component/Themes/Generic.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Converter:ForeColorConvert x:Key="ForeColorConvert"/>
    <Converter:TextboxBackgroudConvert x:Key="TextboxBackgroudConvert"/>

    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="{Binding Converter={StaticResource TextboxBackgroudConvert}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Foreground" Value="{Binding Converter={StaticResource ForeColorConvert}}" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="BorderThickness" Value="1,1,1,1" />
        <Setter Property="CharacterCasing" Value="Upper" />
    </Style>

    <Style x:Key="{x:Type TextBlock}" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{Binding Converter={StaticResource ForeColorConvert}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{Binding Converter={StaticResource ForeColorConvert}}" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Height" Value="23" />
    </Style>

    <Style x:Key="{x:Type telerik:RadComboBox}" TargetType="{x:Type telerik:RadComboBox}">
        <Setter Property="FontFamily" Value="新宋体"/>
    </Style>

    <Style TargetType="Label" x:Key="ToolBarLabelStyle">
        <Setter Property="FontFamily" Value="新宋体"/>
    </Style>
    <!--通道数据模版-->
    <DataTemplate x:Key="ChannelManageDataTemplate">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition Width="10"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image  Grid.Row="1" Grid.Column="1" Width="20" x:Name="MeetingGroup_Image"  Source="Images/channelLeftCameraNotlight.png"></Image>
            <TextBlock Margin="10,0,0,0" Foreground="White" Grid.Row="1" Grid.Column="2" FontSize="20" x:Name="MeetingGroup_TextBlock" VerticalAlignment="Center" Text="{Binding ChannelCfgData.Name}"></TextBlock>
            <Grid Visibility="Hidden" x:Name="buttongrid" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="3">
                <Grid.RenderTransform>
                    <TranslateTransform X="0"></TranslateTransform>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button  Style="{StaticResource MetorButton}"  >修</Button>
                <Button Style="{StaticResource MetorButton}"   Grid.Column="2">删</Button>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter TargetName="buttongrid" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>-->
            <DataTrigger Binding="{Binding IsOpened}" Value="true">
                <Setter TargetName="MeetingGroup_Image" Property="Source" Value="Images/channelLeftCameralight.png"></Setter>
            </DataTrigger>
            <!--<EventTrigger RoutedEvent="{Binding Path=Selected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" >
                <BeginStoryboard Storyboard="{StaticResource showDW}">
                </BeginStoryboard>
            </EventTrigger>-->
        </DataTemplate.Triggers>
    </DataTemplate>

    <!--控件样式部分-->
    <Style x:Key="btnAddPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/channelButtonBackground1.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="Images/channelButtonLeftLightStateBackground.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--添加修改按钮-->
    <Style x:Key="btnModifyPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/channelButtonBackground2.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="Images/channelButtonmiddleLightStateBackground.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--添加删除按钮-->
    <Style x:Key="btnDeletePassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="Images/channelButtonBackground3.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="Images/channelButtonLeftLightStateBackground3.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--抓拍识别按钮-->
    <Style x:Key="CaptureRecordButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Foreground" Value="#3E3E43"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" CornerRadius="5" BorderThickness="2" BorderBrush="#3E3E43" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--抓拍照片数据模版-->
    <DataTemplate x:Key="CaptureDataTemplate">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" ></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                <!--<RowDefinition Height="auto"></RowDefinition>-->
            </Grid.RowDefinitions>
            <Image  Grid.Row="0" Width="110" Height="110" Stretch="Fill" x:Name="MeetingGroup_Image"  Source="{Binding Img}"/>
            <TextBlock Foreground="White" Grid.Row="1"  FontSize="20" x:Name="MeetingGroup_TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ChannelName}"/>
            <!--<TextBlock Foreground="White" Grid.Row="2" FontSize="20" VerticalAlignment="Center" Text="{Binding time}"></TextBlock>-->
        </Grid>
    </DataTemplate>

</ResourceDictionary>