<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:SING.Infrastructure.Themes.CommonControl">
    <!--特效部分-->
    <DropShadowEffect x:Key="MouseOverEffect" Color="#686868" ShadowDepth="3"></DropShadowEffect>
    <DropShadowEffect x:Key="PressedEffect" Color="#686868" ShadowDepth="0"></DropShadowEffect>
    <ImageBrush x:Key="ViedoBackground" ImageSource="pack://application:,,,/FACE;component/Resources/noVideoBackground.png"></ImageBrush>

    <!--动画部分-->
    <!--通道里飞入的按钮-->
    <Storyboard x:Key="showDW">
        <DoubleAnimation Storyboard.TargetName="buttongrid"
                        Storyboard.TargetProperty="RenderTransform.X"
                        From="-90" To="-20" Duration="0:0:0.3" >
        </DoubleAnimation>
        <DoubleAnimation Storyboard.TargetName="buttongrid"
                         Storyboard.TargetProperty="RenderTransform.X"
                        To="0" BeginTime="0:0:0.3" Duration="0:0:0.1" >
        </DoubleAnimation>
    </Storyboard>

    <!--控件样式部分-->
    <!--<Style x:Key="btnAddPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonBackground1.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonLeftLightStateBackground.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <!--添加修改按钮-->
    <!--<Style x:Key="btnModifyPassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonBackground2.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonmiddleLightStateBackground.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <!--添加删除按钮-->
    <!--<Style x:Key="btnDeletePassageWayStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonBackground3.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="Foreground" Value="LightGray"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/channelButtonLeftLightStateBackground3.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>-->
    <!--照片查询选取照片按钮-->
    <Style x:Key="imgSpecifyQueryPhotoStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/selectedPhotoBackground.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/selectedPhotoCharBackground.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--转到按钮-->
    <Style x:Key="btnNoBackGroundStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/captureIdentifyAreaBelowBackgroundNotLight.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/backgroundframe.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--普通的点击按钮-->
    <Style x:Key="btnStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/buttonNotLight.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/buttonLight.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--无边框按钮-->
    <Style x:Key="NoBorderButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="0"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Effect" Value="{StaticResource MouseOverEffect}"></Setter>
                        </Trigger>
                        <Trigger  Property="IsPressed"  Value="true">
                            <Setter Property="Effect" Value="{x:Null}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--主菜单切换功能按钮-->
    <Style x:Key="MainWindowButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Width" Value="150"></Setter>
        <Setter Property="Margin" Value="10"></Setter>
        <Setter Property="Foreground" Value="#11E8FA"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--抓拍识别按钮-->
    <!--<Style x:Key="CaptureRecordButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Foreground" Value="#3E3E43"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" CornerRadius="5" BorderThickness="2" BorderBrush="#3E3E43" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                        </Trigger>
                        <Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--视频按钮-->
    <Style x:Key="CaptureVideoButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Margin" Value="5"></Setter>
        <Setter Property="Foreground" Value="#3E3E43"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" CornerRadius="5" BorderThickness="2" BorderBrush="#3E3E43" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>
                        <!--<Trigger  Property="IsChecked"  Value="true">
                            <Setter Property="Foreground" Value="White"></Setter>
                            <Setter TargetName="Bd" Property="BorderBrush" Value="White"></Setter>
                        </Trigger>-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--圆角输入框-->
    <Style x:Key="RadiusTextBox" BasedOn="{x:Null}" TargetType="{x:Type TextBox}">
        <Setter Property="Foreground" Value="#16E8FA"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="#18BED7"/>
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="FontSize" Value="20"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="Bd" CornerRadius="5" BorderBrush="#18BED7" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                    <Condition Property="IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--右键菜单-->
    <!--
    <Style x:Key="hello" TargetType="{x:Type ContextMenu}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="0"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--扁平按钮-->
    <Style x:Key="MetorButton" TargetType="{x:Type Button}">
        <Setter Property="Background" >
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/videoPreviewDown.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="White"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="Chrome" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter TextBlock.FontSize="20" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentPresenter.Effect>
                                <DropShadowEffect  Color="#686868" ShadowDepth="5"></DropShadowEffect>
                            </ContentPresenter.Effect>
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="IsMouseOver"  Value="true">
                            <Setter Property="Effect" Value="{StaticResource MouseOverEffect}"></Setter>
                        </Trigger>
                        <Trigger  Property="IsPressed"  Value="true">
                            <Setter Property="Effect" Value="{x:Null}"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--比对记录的label-->
    <Style x:Key="NormalLable" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="#49BBED"></Setter>
        <Setter Property="HorizontalAlignment" Value="Right"></Setter>
        <Setter Property="Opacity" Value="0.9"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
    </Style>
    <!--表格信息的表头格式-->
    <ControlTemplate x:Key="tmpForThumbCmp" TargetType="{x:Type Thumb}">
        <Border>
            <Rectangle Width="1" Name="rec" Height="16">
                <Rectangle.Fill>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <GradientStop Color="#143544" Offset="0.22"/>
                        <GradientStop Color="#143544" Offset="0.5"/>
                    </LinearGradientBrush>
                </Rectangle.Fill>
            </Rectangle>
        </Border>
    </ControlTemplate>
    <Style TargetType="{x:Type GridViewColumnHeader}" x:Key="MyCmpHeaderStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="13"/>
        <!--<Setter Property="FontFamily" Value="华文细黑"></Setter>-->
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
                    <Grid Name="g" Margin="-1,0,0,0">
                        <Grid.Background>
                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                <GradientStop Color="#27A5DB" Offset="0.3"/>
                                <GradientStop Color="White" Offset="1"/>
                            </LinearGradientBrush>
                        </Grid.Background>
                        <Border Name="bd" Padding="{TemplateBinding Padding}" Height="30">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">
                            </ContentPresenter>
                            <Border.Background>
                                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/leftBlueBar.png"></ImageBrush>
                            </Border.Background>
                        </Border>
                        <Thumb Name="PART_HeaderGripper" Template="{StaticResource tmpForThumbCmp}" HorizontalAlignment="Right" Margin="0,0,-1,0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--下拉选项卡-->
    <Style TargetType="ToggleButton" x:Key="ComboxStyleBtn1">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Back" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" Margin="0,0,0,0">
                        <Path Name="PathFill" Fill="#27A5Db" Width="14" Height="12" StrokeThickness="1.5" Stroke="#27A5Db" Opacity="0.5" Data="M5,0 L10,10 L0,10 z" 
                              HorizontalAlignment="Right"    RenderTransformOrigin="0.5,0.5" Stretch="Fill">
                            <Path.RenderTransform>
                                <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform Angle="180"/>
                                    <TranslateTransform/>
                                </TransformGroup>
                            </Path.RenderTransform>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="PathFill" Property="Fill" Value="Transparent"></Setter>
                            <Setter TargetName="Back" Property="Background" Value="Transparent"></Setter>
                            <Setter TargetName="Back" Property="BorderBrush" Value="#326A79"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="ComboBox" x:Key="ComboBoxStyle2">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <!--ComBoxItem-->
                <Style TargetType="ComboBoxItem">
                    <!--<Setter Property="MinHeight" Value="22"></Setter>
                    <Setter Property="MinWidth" Value="60"></Setter>-->
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="ComboBoxItem">
                                <Border x:Name="Back" Background="Transparent"  BorderThickness="0,0,0,0" BorderBrush="#49BBED" >
                                    <ContentPresenter TextBlock.Foreground="White" ContentSource="{Binding Source}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,0,0"></ContentPresenter>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#49BBED"></Setter>
                                    </Trigger>
                                    <Trigger Property="IsHighlighted" Value="True">
                                        <Setter TargetName="Back" Property="Background" Value="#49BBED"></Setter>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border BorderThickness="1" BorderBrush="#49BBED" Margin="0">
                            <Border  x:Name="bd" Grid.Column="0" Grid.ColumnSpan="2" BorderThickness="3" BorderBrush="Transparent" CornerRadius="0,0,0,0" Background="Transparent">
                                <Grid Background="Transparent">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="0.7*"/>
                                        <ColumnDefinition Width="20"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Style="{DynamicResource RadiusTextBox}" FontSize="12" x:Name="ComboBoxTextBox" Grid.ColumnSpan="2" IsHitTestVisible="False" IsReadOnly="True" VerticalContentAlignment="Center" BorderThickness="0" TextAlignment="Center" 
                                     Foreground="#49BBED" Background="Transparent" Text="{TemplateBinding Text}">
                                    </TextBox>
                                    <ToggleButton x:Name="ComboBoxToggleButton" Grid.ColumnSpan="2" Style="{StaticResource ComboxStyleBtn1}" 
                                              IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ClickMode="Press"></ToggleButton>
                                </Grid>
                            </Border>
                        </Border>
                        <Popup  IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" x:Name="Popup" Focusable="False" AllowsTransparency="True" 
                                   PopupAnimation="Slide">
                            <Border CornerRadius="1" MaxHeight="100" MinWidth="{TemplateBinding ActualWidth}" 
                                        x:Name="DropDown" SnapsToDevicePixels="True" >
                                <Border.Background>
                                    <ImageBrush  ImageSource="pack://application:,,,/FACE;component/Resources/SystemBackground.jpg"></ImageBrush>
                                </Border.Background>
                                <Border.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="2" ShadowDepth="0" Opacity="0.5"/>
                                </Border.Effect>
                                <ScrollViewer MaxHeight="100"  SnapsToDevicePixels="True" 
                                                  HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Hidden" CanContentScroll="False"
                                                  >
                                    <!-- StackPanel 用于显示子级，方法是将 IsItemsHost 设置为 True -->
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" Background="Transparent"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="ComboBoxTextBox" Property="IsFocused" Value="true">
                            <Setter TargetName="Popup" Property="IsOpen" Value="true"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--叉按钮-->
    <Style x:Key="btnCloseStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/cross.png"></ImageBrush>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="FontFamily" Value="华文细黑"></Setter>
        <Setter Property="FontSize" Value="4"></Setter>-->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background">
                    <Setter.Value>
                        <ImageBrush ImageSource="pack://application:,,,/FACE;component/Resources/cross1.png"></ImageBrush>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--日期选择-->
    <Style TargetType="{x:Type DatePicker}">
        <Setter Property="Foreground" Value="#FF333333"/>
        <Setter Property="IsTodayHighlighted" Value="True"/>
        <Setter Property="SelectedDateFormat" Value="Short"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint=".5,0" StartPoint=".5,1">
                    <GradientStop Color="#FFA3AEB9" Offset="0"/>
                    <GradientStop Color="#FF8399A9" Offset="0.375"/>
                    <GradientStop Color="#FF718597" Offset="0.375"/>
                    <GradientStop Color="#FF617584" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DatePicker}">
                    <Border  BorderThickness="0" CornerRadius="0" Background="Transparent" Padding="{TemplateBinding Padding}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal"/>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_DisabledVisual"/>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="PART_Root"  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="Center">
                            <Grid.Resources>
                                <SolidColorBrush x:Key="DisabledBrush" Color="#A5FFFFFF"/>
                                <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="{x:Type Button}">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualStateGroup.Transitions>
                                                    <VisualTransition GeneratedDuration="0"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="MouseOver"/>
                                                    <VisualTransition GeneratedDuration="0:0:0.1" To="Pressed"/>
                                                </VisualStateGroup.Transitions>
                                                <VisualState x:Name="Normal"/>
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <ColorAnimation Duration="0" To="#FF448DCA" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background"/>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#7FFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#CCFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F2FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" Storyboard.TargetName="Background">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#FF448DCA"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <DoubleAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="Highlight">
                                                            <SplineDoubleKeyFrame KeyTime="0" Value="1"/>
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#EAFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[2].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#C6FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[3].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#6BFFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames BeginTime="0" Duration="00:00:00.001" Storyboard.TargetProperty="(Border.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" Storyboard.TargetName="BackgroundGradient">
                                                            <SplineColorKeyFrame KeyTime="0" Value="#F4FFFFFF"/>
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled"/>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid Background="#11FFFFFF" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="18" Margin="0" VerticalAlignment="Center" Width="19">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                                <ColumnDefinition Width="20*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                                <RowDefinition Height="19*"/>
                                            </Grid.RowDefinitions>
                                            <Border x:Name="Highlight" BorderBrush="#FF45D6FA" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,1,1" Margin="-1" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                            <Border x:Name="Background" BorderBrush="#FFFFFFFF" BorderThickness="1" Background="#FF1F3B53" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3"/>
                                            <Border x:Name="BackgroundGradient" BorderBrush="#BF000000" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius=".5" Margin="0,-1,0,0" Opacity="1" Grid.Row="1" Grid.RowSpan="3">
                                                <Border.Background>
                                                    <LinearGradientBrush EndPoint=".7,1" StartPoint=".7,0">
                                                        <GradientStop Color="#FFFFFFFF" Offset="0"/>
                                                        <GradientStop Color="#F9FFFFFF" Offset="0.375"/>
                                                        <GradientStop Color="#E5FFFFFF" Offset="0.625"/>
                                                        <GradientStop Color="#C6FFFFFF" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Border.Background>
                                            </Border>
                                            <Rectangle Grid.ColumnSpan="4" Grid.RowSpan="1" StrokeThickness="1">
                                                <Rectangle.Fill>
                                                    <LinearGradientBrush EndPoint="0.3,-1.1" StartPoint="0.46,1.6">
                                                        <GradientStop Color="#FF4084BD"/>
                                                        <GradientStop Color="#FFAFCFEA" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Fill>
                                                <Rectangle.Stroke>
                                                    <LinearGradientBrush EndPoint="0.48,-1" StartPoint="0.48,1.25">
                                                        <GradientStop Color="#FF494949"/>
                                                        <GradientStop Color="#FF9F9F9F" Offset="1"/>
                                                    </LinearGradientBrush>
                                                </Rectangle.Stroke>
                                            </Rectangle>
                                            <Path Grid.ColumnSpan="4" Grid.Column="0" Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z" Fill="#FF2F2F2F" HorizontalAlignment="Center" Margin="4,3,4,3" Grid.Row="1" Grid.RowSpan="3" RenderTransformOrigin="0.5,0.5" Stretch="Fill" VerticalAlignment="Center"/>
                                            <Ellipse Grid.ColumnSpan="4" Fill="#FFFFFFFF" HorizontalAlignment="Center" Height="3" StrokeThickness="0" VerticalAlignment="Center" Width="3"/>
                                            <Border x:Name="DisabledVisual" BorderBrush="#B2FFFFFF" BorderThickness="1" Grid.ColumnSpan="4" CornerRadius="0,0,.5,.5" Opacity="0" Grid.Row="0" Grid.RowSpan="4"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </Grid.Resources>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Button RenderTransformOrigin="0.5,0.5" x:Name="PART_Button" Grid.Column="1" Foreground="{TemplateBinding Foreground}" Focusable="False" HorizontalAlignment="Right" Grid.Row="0" Template="{StaticResource DropDownButtonTemplate}" VerticalAlignment="center">
                                <!--<Button.RenderTransform>
                                    <ScaleTransform ScaleX="2.5" ScaleY="2.5"></ScaleTransform>
                                </Button.RenderTransform>-->
                            </Button>
                            <DatePickerTextBox BorderThickness="0" BorderBrush="Black" Background="Transparent" VerticalContentAlignment="Center" x:Name="PART_TextBox" Grid.Column="0" Focusable="{TemplateBinding Focusable}" VerticalAlignment="Center" Grid.Row="0" >
                                <DatePickerTextBox.Style>
                                    <Style TargetType="{x:Type DatePickerTextBox}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Border>
                                                        <TextBlock HorizontalAlignment="Center" Text="{Binding ElementName= PART_TextBox,Path=Text}"></TextBlock>
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </DatePickerTextBox.Style>
                            </DatePickerTextBox>
                            <Grid x:Name="PART_DisabledVisual" Grid.ColumnSpan="2" Grid.Column="0" IsHitTestVisible="False" Opacity="0" Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Rectangle Grid.Column="0" Fill="#A5FFFFFF" RadiusY="1" Grid.Row="0" RadiusX="1"/>
                                <Rectangle Grid.Column="1" Fill="#A5FFFFFF" Height="18" Margin="3,0,3,0" RadiusY="1" Grid.Row="0" RadiusX="1" Width="19"/>
                                <Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_TextBox}" StaysOpen="False">
                                    <Popup.RenderTransform>
                                        <ScaleTransform ScaleX="2" ScaleY="2"></ScaleTransform>
                                    </Popup.RenderTransform>
                                </Popup>
                            </Grid>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="false">
                            <Setter Property="Foreground" TargetName="PART_TextBox" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--数据模版部分-->
    <!--抓拍照片数据模版-->
    <!--<DataTemplate x:Key="CaptureDataTemplate">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" ></RowDefinition>
                <RowDefinition Height="auto"></RowDefinition>
                --><!--<RowDefinition Height="auto"></RowDefinition>--><!--
            </Grid.RowDefinitions>
            <Image  Grid.Row="0" MaxWidth="100" MaxHeight="100" Stretch="Fill" x:Name="MeetingGroup_Image"  Source="{Binding Img}"/>
            <TextBlock Foreground="White" Grid.Row="1"  FontSize="20" x:Name="MeetingGroup_TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Text="{Binding ChannelName}"/>
            --><!--<TextBlock Foreground="White" Grid.Row="2" FontSize="20" VerticalAlignment="Center" Text="{Binding time}"></TextBlock>--><!--
        </Grid>
    </DataTemplate>-->
    <!--通道数据模版-->
    <!--<DataTemplate x:Key="ChannelManageDataTemplate">
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="10"></RowDefinition>
                <RowDefinition></RowDefinition>
                <RowDefinition Height="10"></RowDefinition>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="10"></ColumnDefinition>
                <ColumnDefinition Width="auto"></ColumnDefinition>
                <ColumnDefinition></ColumnDefinition>
                <ColumnDefinition Width="80"></ColumnDefinition>
                <ColumnDefinition Width="10"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Image  Grid.Row="1" Grid.Column="1" Width="20" x:Name="MeetingGroup_Image"  Source="pack://application:,,,/FACE;component/Resources/channelLeftCameraNotlight.png"></Image>
            <TextBlock Margin="10,0,0,0" Foreground="White" Grid.Row="1" Grid.Column="2" FontSize="20" x:Name="MeetingGroup_TextBlock" VerticalAlignment="Center" Text="{Binding MyChannelCfg.Name}"></TextBlock>
            <Grid Visibility="Hidden" x:Name="buttongrid" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="3">
                <Grid.RenderTransform>
                    <TranslateTransform X="0"></TranslateTransform>
                </Grid.RenderTransform>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="5"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button  Style="{StaticResource MetorButton}"  >修</Button>
                <Button Style="{StaticResource MetorButton}"   Grid.Column="2">删</Button>
            </Grid>
        </Grid>
        <DataTemplate.Triggers>
            --><!--<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" Value="True">
                <Setter TargetName="buttongrid" Property="Visibility" Value="Visible"></Setter>
            </DataTrigger>--><!--
            <DataTrigger Binding="{Binding IsOpened}" Value="true">
                <Setter TargetName="MeetingGroup_Image" Property="Source" Value="pack://application:,,,/FACE;component/Resources/channelLeftCameralight.png"></Setter>
            </DataTrigger>
            --><!--<EventTrigger RoutedEvent="{Binding Path=Selected, RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type ListBoxItem}}}" >
                <BeginStoryboard Storyboard="{StaticResource showDW}">
                </BeginStoryboard>
            </EventTrigger>--><!--
        </DataTemplate.Triggers>
    </DataTemplate>-->
</ResourceDictionary>
