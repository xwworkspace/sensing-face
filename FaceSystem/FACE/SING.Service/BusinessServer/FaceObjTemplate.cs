/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class FaceObjTemplate : TBase
{
  private string _tcUuid;
  private string _tcObjid;
  private string _tcKey;
  private int _nIndex;
  private long _dTm;
  private string _tcRemarks;
  private byte[] _img;

  public string TcUuid
  {
    get
    {
      return _tcUuid;
    }
    set
    {
      __isset.tcUuid = true;
      this._tcUuid = value;
    }
  }

  public string TcObjid
  {
    get
    {
      return _tcObjid;
    }
    set
    {
      __isset.tcObjid = true;
      this._tcObjid = value;
    }
  }

  public string TcKey
  {
    get
    {
      return _tcKey;
    }
    set
    {
      __isset.tcKey = true;
      this._tcKey = value;
    }
  }

  public int NIndex
  {
    get
    {
      return _nIndex;
    }
    set
    {
      __isset.nIndex = true;
      this._nIndex = value;
    }
  }

  public long DTm
  {
    get
    {
      return _dTm;
    }
    set
    {
      __isset.dTm = true;
      this._dTm = value;
    }
  }

  public string TcRemarks
  {
    get
    {
      return _tcRemarks;
    }
    set
    {
      __isset.tcRemarks = true;
      this._tcRemarks = value;
    }
  }

  public byte[] Img
  {
    get
    {
      return _img;
    }
    set
    {
      __isset.img = true;
      this._img = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool tcUuid;
    public bool tcObjid;
    public bool tcKey;
    public bool nIndex;
    public bool dTm;
    public bool tcRemarks;
    public bool img;
  }

  public FaceObjTemplate() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              TcUuid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              TcObjid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              TcKey = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I32) {
              NIndex = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I64) {
              DTm = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.String) {
              TcRemarks = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              Img = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("FaceObjTemplate");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (TcUuid != null && __isset.tcUuid) {
        field.Name = "tcUuid";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TcUuid);
        oprot.WriteFieldEnd();
      }
      if (TcObjid != null && __isset.tcObjid) {
        field.Name = "tcObjid";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TcObjid);
        oprot.WriteFieldEnd();
      }
      if (TcKey != null && __isset.tcKey) {
        field.Name = "tcKey";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TcKey);
        oprot.WriteFieldEnd();
      }
      if (__isset.nIndex) {
        field.Name = "nIndex";
        field.Type = TType.I32;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(NIndex);
        oprot.WriteFieldEnd();
      }
      if (__isset.dTm) {
        field.Name = "dTm";
        field.Type = TType.I64;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(DTm);
        oprot.WriteFieldEnd();
      }
      if (TcRemarks != null && __isset.tcRemarks) {
        field.Name = "tcRemarks";
        field.Type = TType.String;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(TcRemarks);
        oprot.WriteFieldEnd();
      }
      if (Img != null && __isset.img) {
        field.Name = "img";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Img);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("FaceObjTemplate(");
    bool __first = true;
    if (TcUuid != null && __isset.tcUuid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TcUuid: ");
      __sb.Append(TcUuid);
    }
    if (TcObjid != null && __isset.tcObjid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TcObjid: ");
      __sb.Append(TcObjid);
    }
    if (TcKey != null && __isset.tcKey) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TcKey: ");
      __sb.Append(TcKey);
    }
    if (__isset.nIndex) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("NIndex: ");
      __sb.Append(NIndex);
    }
    if (__isset.dTm) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("DTm: ");
      __sb.Append(DTm);
    }
    if (TcRemarks != null && __isset.tcRemarks) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("TcRemarks: ");
      __sb.Append(TcRemarks);
    }
    if (Img != null && __isset.img) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Img: ");
      __sb.Append(Img);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

