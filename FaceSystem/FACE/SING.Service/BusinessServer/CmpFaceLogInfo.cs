/**
 * Autogenerated by Thrift Compiler (0.9.3)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
using System;
using System.Collections;
using System.Collections.Generic;
using System.Text;
using System.IO;
using Thrift;
using Thrift.Collections;
using System.Runtime.Serialization;
using Thrift.Protocol;
using Thrift.Transport;


#if !SILVERLIGHT
[Serializable]
#endif
public partial class CmpFaceLogInfo : TBase
{
  private string _uuid;
  private string _ChannelID;
  private string _channelname;
  private long _time;
  private int _quality;
  private int _score;
  private string _ID;
  private string _name;
  private int _age;
  private int _gender;
  private byte[] _idimg;
  private byte[] _capimg;
  private byte[] _idfea;
  private byte[] _capfea;

  public string Uuid
  {
    get
    {
      return _uuid;
    }
    set
    {
      __isset.uuid = true;
      this._uuid = value;
    }
  }

  public string ChannelID
  {
    get
    {
      return _ChannelID;
    }
    set
    {
      __isset.ChannelID = true;
      this._ChannelID = value;
    }
  }

  public string Channelname
  {
    get
    {
      return _channelname;
    }
    set
    {
      __isset.channelname = true;
      this._channelname = value;
    }
  }

  public long Time
  {
    get
    {
      return _time;
    }
    set
    {
      __isset.time = true;
      this._time = value;
    }
  }

  public int Quality
  {
    get
    {
      return _quality;
    }
    set
    {
      __isset.quality = true;
      this._quality = value;
    }
  }

  public int Score
  {
    get
    {
      return _score;
    }
    set
    {
      __isset.score = true;
      this._score = value;
    }
  }

  public string ID
  {
    get
    {
      return _ID;
    }
    set
    {
      __isset.ID = true;
      this._ID = value;
    }
  }

  public string Name
  {
    get
    {
      return _name;
    }
    set
    {
      __isset.name = true;
      this._name = value;
    }
  }

  public int Age
  {
    get
    {
      return _age;
    }
    set
    {
      __isset.age = true;
      this._age = value;
    }
  }

  public int Gender
  {
    get
    {
      return _gender;
    }
    set
    {
      __isset.gender = true;
      this._gender = value;
    }
  }

  public byte[] Idimg
  {
    get
    {
      return _idimg;
    }
    set
    {
      __isset.idimg = true;
      this._idimg = value;
    }
  }

  public byte[] Capimg
  {
    get
    {
      return _capimg;
    }
    set
    {
      __isset.capimg = true;
      this._capimg = value;
    }
  }

  public byte[] Idfea
  {
    get
    {
      return _idfea;
    }
    set
    {
      __isset.idfea = true;
      this._idfea = value;
    }
  }

  public byte[] Capfea
  {
    get
    {
      return _capfea;
    }
    set
    {
      __isset.capfea = true;
      this._capfea = value;
    }
  }


  public Isset __isset;
  #if !SILVERLIGHT
  [Serializable]
  #endif
  public struct Isset {
    public bool uuid;
    public bool ChannelID;
    public bool channelname;
    public bool time;
    public bool quality;
    public bool score;
    public bool ID;
    public bool name;
    public bool age;
    public bool gender;
    public bool idimg;
    public bool capimg;
    public bool idfea;
    public bool capfea;
  }

  public CmpFaceLogInfo() {
  }

  public void Read (TProtocol iprot)
  {
    iprot.IncrementRecursionDepth();
    try
    {
      TField field;
      iprot.ReadStructBegin();
      while (true)
      {
        field = iprot.ReadFieldBegin();
        if (field.Type == TType.Stop) { 
          break;
        }
        switch (field.ID)
        {
          case 1:
            if (field.Type == TType.String) {
              Uuid = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 2:
            if (field.Type == TType.String) {
              ChannelID = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 3:
            if (field.Type == TType.String) {
              Channelname = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 4:
            if (field.Type == TType.I64) {
              Time = iprot.ReadI64();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 5:
            if (field.Type == TType.I32) {
              Quality = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 6:
            if (field.Type == TType.I32) {
              Score = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 7:
            if (field.Type == TType.String) {
              ID = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 8:
            if (field.Type == TType.String) {
              Name = iprot.ReadString();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 9:
            if (field.Type == TType.I32) {
              Age = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 10:
            if (field.Type == TType.I32) {
              Gender = iprot.ReadI32();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 11:
            if (field.Type == TType.String) {
              Idimg = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 12:
            if (field.Type == TType.String) {
              Capimg = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 13:
            if (field.Type == TType.String) {
              Idfea = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          case 14:
            if (field.Type == TType.String) {
              Capfea = iprot.ReadBinary();
            } else { 
              TProtocolUtil.Skip(iprot, field.Type);
            }
            break;
          default: 
            TProtocolUtil.Skip(iprot, field.Type);
            break;
        }
        iprot.ReadFieldEnd();
      }
      iprot.ReadStructEnd();
    }
    finally
    {
      iprot.DecrementRecursionDepth();
    }
  }

  public void Write(TProtocol oprot) {
    oprot.IncrementRecursionDepth();
    try
    {
      TStruct struc = new TStruct("CmpFaceLogInfo");
      oprot.WriteStructBegin(struc);
      TField field = new TField();
      if (Uuid != null && __isset.uuid) {
        field.Name = "uuid";
        field.Type = TType.String;
        field.ID = 1;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Uuid);
        oprot.WriteFieldEnd();
      }
      if (ChannelID != null && __isset.ChannelID) {
        field.Name = "ChannelID";
        field.Type = TType.String;
        field.ID = 2;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ChannelID);
        oprot.WriteFieldEnd();
      }
      if (Channelname != null && __isset.channelname) {
        field.Name = "channelname";
        field.Type = TType.String;
        field.ID = 3;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Channelname);
        oprot.WriteFieldEnd();
      }
      if (__isset.time) {
        field.Name = "time";
        field.Type = TType.I64;
        field.ID = 4;
        oprot.WriteFieldBegin(field);
        oprot.WriteI64(Time);
        oprot.WriteFieldEnd();
      }
      if (__isset.quality) {
        field.Name = "quality";
        field.Type = TType.I32;
        field.ID = 5;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Quality);
        oprot.WriteFieldEnd();
      }
      if (__isset.score) {
        field.Name = "score";
        field.Type = TType.I32;
        field.ID = 6;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Score);
        oprot.WriteFieldEnd();
      }
      if (ID != null && __isset.ID) {
        field.Name = "ID";
        field.Type = TType.String;
        field.ID = 7;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(ID);
        oprot.WriteFieldEnd();
      }
      if (Name != null && __isset.name) {
        field.Name = "name";
        field.Type = TType.String;
        field.ID = 8;
        oprot.WriteFieldBegin(field);
        oprot.WriteString(Name);
        oprot.WriteFieldEnd();
      }
      if (__isset.age) {
        field.Name = "age";
        field.Type = TType.I32;
        field.ID = 9;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Age);
        oprot.WriteFieldEnd();
      }
      if (__isset.gender) {
        field.Name = "gender";
        field.Type = TType.I32;
        field.ID = 10;
        oprot.WriteFieldBegin(field);
        oprot.WriteI32(Gender);
        oprot.WriteFieldEnd();
      }
      if (Idimg != null && __isset.idimg) {
        field.Name = "idimg";
        field.Type = TType.String;
        field.ID = 11;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Idimg);
        oprot.WriteFieldEnd();
      }
      if (Capimg != null && __isset.capimg) {
        field.Name = "capimg";
        field.Type = TType.String;
        field.ID = 12;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Capimg);
        oprot.WriteFieldEnd();
      }
      if (Idfea != null && __isset.idfea) {
        field.Name = "idfea";
        field.Type = TType.String;
        field.ID = 13;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Idfea);
        oprot.WriteFieldEnd();
      }
      if (Capfea != null && __isset.capfea) {
        field.Name = "capfea";
        field.Type = TType.String;
        field.ID = 14;
        oprot.WriteFieldBegin(field);
        oprot.WriteBinary(Capfea);
        oprot.WriteFieldEnd();
      }
      oprot.WriteFieldStop();
      oprot.WriteStructEnd();
    }
    finally
    {
      oprot.DecrementRecursionDepth();
    }
  }

  public override string ToString() {
    StringBuilder __sb = new StringBuilder("CmpFaceLogInfo(");
    bool __first = true;
    if (Uuid != null && __isset.uuid) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Uuid: ");
      __sb.Append(Uuid);
    }
    if (ChannelID != null && __isset.ChannelID) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ChannelID: ");
      __sb.Append(ChannelID);
    }
    if (Channelname != null && __isset.channelname) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Channelname: ");
      __sb.Append(Channelname);
    }
    if (__isset.time) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Time: ");
      __sb.Append(Time);
    }
    if (__isset.quality) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Quality: ");
      __sb.Append(Quality);
    }
    if (__isset.score) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Score: ");
      __sb.Append(Score);
    }
    if (ID != null && __isset.ID) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("ID: ");
      __sb.Append(ID);
    }
    if (Name != null && __isset.name) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Name: ");
      __sb.Append(Name);
    }
    if (__isset.age) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Age: ");
      __sb.Append(Age);
    }
    if (__isset.gender) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Gender: ");
      __sb.Append(Gender);
    }
    if (Idimg != null && __isset.idimg) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Idimg: ");
      __sb.Append(Idimg);
    }
    if (Capimg != null && __isset.capimg) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Capimg: ");
      __sb.Append(Capimg);
    }
    if (Idfea != null && __isset.idfea) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Idfea: ");
      __sb.Append(Idfea);
    }
    if (Capfea != null && __isset.capfea) {
      if(!__first) { __sb.Append(", "); }
      __first = false;
      __sb.Append("Capfea: ");
      __sb.Append(Capfea);
    }
    __sb.Append(")");
    return __sb.ToString();
  }

}

