using FACE_ChannelManagement.Models;
using Microsoft.Practices.Prism.ViewModel;
using SING.Data.Data;
using SING.Data.Logger;
using System;
using System.Collections.Generic;
using System.Threading;
using System.Windows.Controls;
using System.Windows.Forms.Integration;

namespace FACE_ChannelManagement.ViewModels
{
    /// <summary>
    /// ChannelPreviewViewModel
    /// 通道预览视图 viewModel
    /// </summary>
    public partial class ViewModel : NotificationObject
    {
        #region ViewLableTile

        private string _cameraPreview;
        public string CameraPreview
        {
            get { return _cameraPreview; }
            set
            {
                _cameraPreview = value;
                RaisePropertyChanged("CameraPreview");
            }
        }
        #endregion


        #region MyRegion
        private Grid _videoPlayerGrid;
        public Grid VideoPlayerGrid
        {
            get
            {
                return _videoPlayerGrid;
            }
            set
            {
                _videoPlayerGrid = value;
                RaisePropertyChanged("VideoPartGrid");
            }
        }
        private List<WindowsFormsHost> _wfhList;
        public List<WindowsFormsHost> WfhList
        {
            get
            {
                return _wfhList;
            }
            set
            {
                _wfhList = value;
                RaisePropertyChanged("WfhList");
            }
        }
        private ChannelConfigData channelListItem;
        public ChannelConfigData ChannelListItem
        {
            get { return channelListItem; }
            set
            {
                channelListItem = value;
                RaisePropertyChanged("ChannelListItem");
            }
        }

        private List<ChannelConfigData> channelList;
        public List<ChannelConfigData> ChannelList
        {
            get { return channelList; }
            set
            {
                channelList = value;
                RaisePropertyChanged("ChannelList");
            }
        }
        #endregion


        #region 初始化通道列表

        /// <summary>
        /// 监听服务器实时上传的抓拍信息
        /// </summary>
        public ManualResetEvent ResetServerRealtimeCapInfo;
        /// <summary>
        /// 监听服务器实时上传的比对信息
        /// </summary>
        public ManualResetEvent ResetServerRealtimeCmpInfo;

        private void InitialChannel()
        {
            _dataService.InitialChannel(this);
        }

        /// <summary>
        /// 
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        public void ChannelListItemChanged(object sender, EventArgs e)
        {
            if (Cameras != null && Cameras.CurrentItem != null)
            {
                Camera = Cameras.CurrentItem as ChannelConfigData;
                CameraPreview = Camera.ChannelCfgData.Name;
                if (varPrevSelectedCamera == null)
                {
                    varPrevSelectedCamera = Camera;
                }
                else if (varPrevSelectedCamera != Camera)
                {
                    CloseChannelFunc(WfhList, varPrevSelectedCamera)();
                    varPrevSelectedCamera = Camera;
                }
            }

            ChannelCfg channelCfg = ChannelCfgData.Convert(Camera.ChannelCfgData);
            ChannelInfoData = _dataService.ConvertToViewData(channelCfg);

            ChannelVideoSearch();
        }

        private void ChannelVideoSearch()
        {
            if (Camera == null) return;
            try
            {
                string IP = Camera.ChannelCfgData.CaptureCfgData.TcAddr;
                if (IP == string.Empty)
                {
                    System.Windows.MessageBox.Show("摄像机IP为空！");
                    return;
                }

                if (Camera.IsOpened == false)
                {
                    CameraVideoPlayerFunc(WfhList, null, Camera)();
                    SingleScreen()();
                }
                else
                {
                    CloseChannelFunc(WfhList, Camera)();
                }
            }
            catch (Exception ex)
            {
                System.Windows.MessageBox.Show("摄像机无法连接！");
                Logger.Error("通道摄像机连接异常，方法名：ChannelListItemChanged", ex);
            }
        }

        #endregion

    }
}
